[{"C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\index.js":"1","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\reportWebVitals.js":"2","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\App.js":"3","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\AppRouter.js":"4","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\components\\addressform\\AddressForm.jsx":"5","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\services\\AddressBookService.js":"6","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\services\\AxioService.js":"7","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\config\\config.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":384,"mtime":1611815303710,"results":"12","hashOfConfig":"10"},{"size":543,"mtime":1611815208414,"results":"13","hashOfConfig":"10"},{"size":8225,"mtime":1611815073052,"results":"14","hashOfConfig":"10"},{"size":578,"mtime":1611810424950,"results":"15","hashOfConfig":"10"},{"size":853,"mtime":1611810593542,"results":"16","hashOfConfig":"10"},{"size":78,"mtime":1611810527556,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1namalg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\index.js",[],["37","38"],"C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\reportWebVitals.js",[],"C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\App.js",["39"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route>\n            <AppRouter/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\AppRouter.js",[],"C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\components\\addressform\\AddressForm.jsx",["40","41","42","43","44","45"],"import AddressBook from \"../../assets/images/AddressBook.jpg\";\r\nimport cancel from \"../../assets/images/cancel.jpg\";\r\nimport './AddressForm.css';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddressBookService from '../../services/AddressBookService';\r\n\r\nconst service = new AddressBookService();\r\n\r\nconst AddressBookForm = (props) => {\r\n\r\n    let inititalValue = {\r\n      name: '',\r\n      phone: '',\r\n      address: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n      isUpdate: false,\r\n      error: {\r\n        name: '',\r\n        phone: '',\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zip: ''\r\n      }\r\n    }\r\n    const [formValue, setForm] = useState(inititalValue);\r\n  \r\n    const changeValue = (event) => {\r\n      setForm({...formValue, [event.target.name]: event.target.value})\r\n    }\r\n  \r\n    const onCheckChange = (name) => {\r\n      let index = formValue.departmentValue.indexOf(name);\r\n      let checkArray = [...formValue.departmentValue]\r\n      if (index > -1)\r\n        checkArray.splice(index, 1)\r\n      else  \r\n        checkArray.push(name);\r\n      setForm({...formValue, departmentValue: checkArray}); \r\n    }\r\n  \r\n    const getChecked = (name) => {\r\n      return formValue.departmentValue && formValue.departmentValue.includes(name);\r\n    }\r\n  \r\n    const validData = async () => {\r\n      let isError = false;\r\n      let error = {\r\n        name: '',\r\n        phone: '',\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zip: ''\r\n      }\r\n      if (formValue.name.length < 1) {\r\n        error.name = 'name is required field'\r\n        isError = true;\r\n      }\r\n      if (formValue.phone.length < 1) {\r\n        error.phone = 'phone is required field'\r\n        isError = true;\r\n      }\r\n      if (formValue.address.length < 1) {\r\n        error.address = 'address is required field'\r\n        isError = true;\r\n      }\r\n      if (formValue.city.length < 1) {\r\n        error.city = 'city is required field'\r\n        isError = true;\r\n      }\r\n      if (formValue.state.length < 1) {\r\n        error.state = 'state is required field'\r\n        isError = true;\r\n      }\r\n      if (formValue.zip.length < 1) {\r\n        error.zip = 'zip is required field'\r\n        isError = true;\r\n      }\r\n      await setForm({...formValue, error: error})\r\n      return isError;\r\n    }\r\n  \r\n    const save = async (event) => {\r\n      event.preventDefault();\r\n      console.log(\"save\");\r\n  \r\n      if (await validData()) {\r\n        console.log('error', formValue);\r\n        return;\r\n      }\r\n      let object = {\r\n        \"name\": formValue.name,\r\n        \"phone\": formValue.phone,\r\n        \"address\": formValue.address,\r\n        \"city\": formValue.city,\r\n        \"state\": formValue.state,\r\n        \"zip\": formValue.zip\r\n      }\r\n  \r\n      console.log(object);\r\n      service.contactRegistration(object).then(data => {\r\n        console.log(data);\r\n        props.history.push('/');\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  \r\n    const reset = () => {\r\n      setForm({...inititalValue, id: formValue.id, isUpdate: formValue.isUpdate});\r\n    }  \r\n  \r\n    useEffect (() => {\r\n      let contactId = localStorage.getItem('id');\r\n      console.log(\" contact id: \", contactId);\r\n      formValue.isUpdate = true;\r\n      service.getContactById(contactId).then((data) => {\r\n  \r\n          console.log(data.data.data);\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    })\r\n  \r\n    return (\r\n      <div className=\"address-main\">\r\n          <header className=\"header-content header\">\r\n              <div className=\"logo-content\">\r\n                  <img className=\"logo-content-img\" src={AddressBook} alt=\"Logo Image\" />\r\n                  <div>\r\n                      <span className=\"address-text\">ADDRESS</span><br />\r\n                      <span className=\"address-text book-text\">BOOK</span>\r\n                  </div>\r\n              </div>\r\n          </header>\r\n          <div className=\"form-content\">\r\n              <form className=\"form\" action=\"#\" onsubmit=\"save(event)\" onreset=\"resetForm()\">\r\n                  <div className=\"form-head\">\r\n                      <div className=\"header-text\">Person Address Form</div>\r\n                      <div>\r\n                          <a href=\"../homePage/HomePage.jsx\"><img className=\"cancel-img\" src=\"../assets/images/cancel.jpg\" alt=\"Cancel Icon\"></img></a>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row-content\">\r\n                      <label for=\"name\" className=\"label text\">Full Name</label>\r\n                      <input type=\"text\" className=\"input\" id=\"name\" name=\"name\" value={formValue.name} onChange={changeValue} placeholder=\"Your name..\"></input>\r\n                      <error-output className=\"text-error\" for=\"text\">{formValue.error.name}</error-output>\r\n                  </div>\r\n                  <div className=\"row-content\">\r\n                      <label for=\"tel\" className=\"label text\">Phone Number</label>\r\n                      <input type=\"tel\" id=\"tel\" name=\"tel\" className=\"input\" value={formValue.phone} onChange={changeValue} placeholder=\"Your number..\"></input>\r\n                      <error-output className=\"mobno-error\" for=\"tel\">{formValue.error.phone}</error-output>\r\n                  </div>\r\n                  <div className=\"row-content\">\r\n                      <label for=\"address\" className=\"label-text\">Address</label>\r\n                      <textarea className=\"input text\" name=\"address\" id=\"address\" style=\"height: 104px\" value={formValue.address} onChange={changeValue} placeholder=\"your address..\"></textarea>\r\n                  </div>\r\n                  <div className=\"select-item\">\r\n                      <div name=\"citySelect\" id=\"citySelect\" className=\"selectDiv\">\r\n                          <label for=\"city\" className=\"label text\">City</label>\r\n                          <select onChange={changeValue} name=\"city\" id=\"city\">\r\n                                <option value=\"\">Select City</option>\r\n                                <option value=\"Visakhapatnam\">Visakhapatnam</option>\r\n                                <option value=\"Hyderabad\">Hyderabad</option>\r\n                                <option value=\"Pune\">Pune</option>\r\n                                <option value=\"Chennai\">Chennai</option>\r\n                                <option value=\"Mumbai\">Mumbai</option>\r\n                                <option value=\"Bangalore\">Bangalore</option>\r\n                          </select>\r\n                      </div>\r\n                      <div name=\"stateSelect\" id=\"stateSelect\" className=\"selectDiv\">\r\n                          <label for=\"state\" className=\"label text\">State</label>\r\n                          <select onChange={changeValue} name=\"state\" id=\"state\">\r\n                                <option value=\"\">Select State</option>\r\n                                <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                                <option value=\"Telangana\">Telangana</option>\r\n                                <option value=\"Maharashtra\">Maharashtra</option>\r\n                                <option value=\"TamilNadu\">TamilNadu</option>\r\n                                <option value=\"Karnataka\">Karnataka</option>\r\n                          </select>\r\n                      </div>\r\n                      <div name=\"zip\" id=\"zip\">\r\n                          <label for=\"zip\" className=\"label-text\">Zip Code</label>\r\n                          <input className=\"input\" type=\"tel\" id=\"zip\" name=\"zip\" value={formValue.zip} onChange={changeValue} required></input>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"buttonParent\">\r\n                      <div className=\"submit-reset\">\r\n                          <button type=\"submit\" className=\"button submitButton\" onClick={save}>Add</button>\r\n                          <button type=\"reset\" className=\"resetButton button\" onClick={reset}>Reset</button>\r\n                      </div>\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  export default withRouter(AddressBookForm);","C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\services\\AddressBookService.js",[],"C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\services\\AxioService.js",[],"C:\\ReactWorkSpace\\AddressBook\\addressbookapplication\\src\\config\\config.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"55","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":14},{"ruleId":"50","severity":1,"message":"56","line":35,"column":11,"nodeType":"52","messageId":"53","endLine":35,"endColumn":24},{"ruleId":"50","severity":1,"message":"57","line":45,"column":11,"nodeType":"52","messageId":"53","endLine":45,"endColumn":21},{"ruleId":"58","severity":1,"message":"59","line":133,"column":19,"nodeType":"60","endLine":133,"endColumn":90},{"ruleId":"61","severity":1,"message":"62","line":160,"column":84,"nodeType":"63","endLine":160,"endColumn":105},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'cancel' is defined but never used.","'Link' is defined but never used.","'onCheckChange' is assigned a value but never used.","'getChecked' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/style-prop-object","Style prop value must be an object","JSXAttribute","no-global-assign","no-unsafe-negation"]